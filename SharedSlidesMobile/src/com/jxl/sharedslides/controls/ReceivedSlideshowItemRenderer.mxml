<?xml version="1.0" encoding="utf-8"?>
<s:IconItemRenderer xmlns:fx="http://ns.adobe.com/mxml/2009" 
					xmlns:s="library://ns.adobe.com/flex/spark"  
					labelFunction="slideshowLabelFunction"
					iconFunction="slideshowIconFunction"
					messageFunction="slideshowMessageFunction"
					iconWidth="64" iconHeight="64" xmlns:controls="com.jxl.sharedslides.controls.*" >
	
	<fx:Script>
		<![CDATA[
			import com.jxl.shareslides.vo.SlideshowVO;
			import com.projectcocoon.p2p.vo.ObjectMetadataVO;
			
			private var bottomLine:ListDividerSymbol;
			
			private function slideshowLabelFunction(obj:Object):String
			{
				if(obj == null)
					return "";
				
				var meta:ObjectMetadataVO = obj as ObjectMetadataVO;
				if(meta && meta.object != null)
				{
					var slideshow:SlideshowVO = meta.object as SlideshowVO;
					if(slideshow == null)
					{
						return "Unknown Slideshow Name";
					}
					else
					{
						return slideshow.name;
					}
				}
				else
				{
					if(meta && meta.info && meta.info.name)
					{
						return meta.info.name;
					}
					else
					{
						if(meta && meta.info)
						{
							return String(meta.info);
						}
						else
						{
							return "???";
						}
					}
				}
			}
			
			private function slideshowIconFunction(obj:Object):Object
			{
				if(obj is ObjectMetadataVO)
				{
					var om:ObjectMetadataVO = obj as ObjectMetadataVO;
					if(om.isComplete == false || om.progress < 1)
					{
						return null;
					}
					else
					{
						return ButtonArrowUpSymbol;
					}
				}
				else
				{
					return null;
				}
			}
			
			/*
			public override function set data(value:Object):void
			{
				super.data = value;
				
				if(value is ObjectMetadataVO)
				{
					var om:ObjectMetadataVO = value as ObjectMetadataVO;
					if(om.isComplete == false || om.progress < 1)
					{
						progressBar.visible = true;
						if(om.progress > 0)
						{
							progressBar.indeterminate = false;
							progressBar.progress = om.progress;
						}
						return;
					}
					else
					{
						progressBar.visible = false;
					}
				}
			}
			*/
			
			private function slideshowMessageFunction(obj:Object):String
			{
				if(obj is ObjectMetadataVO)
				{
					var om:ObjectMetadataVO = obj as ObjectMetadataVO;
					if(om.isComplete == false || om.progress < 1)
					{
						if(om.progress > 0)
						{
							enabled = false;
							return "Downloaded " + Math.round(om.progress * 100) + "%";
						}
						else
						{
							enabled = false;
							return "Waiting for transfer...";
						}
						return;
					}
					else
					{
						enabled = true;
						return "";
					}
				}
				else
				{
					enabled = false;
					return "";
				}
			}
			
			protected override function createChildren():void
			{
				super.createChildren();
				
				bottomLine = new ListDividerSymbol();
				addChild(bottomLine);
				bottomLine.mouseEnabled = false;
			}
			
			protected override function updateDisplayList(w:Number, h:Number):void
			{
				super.updateDisplayList(w, h);
				
				bottomLine.width = width * .8;
				bottomLine.x = (width - bottomLine.width) / 2;
				bottomLine.y = height - (bottomLine.height + 2);
			}
			
			protected override function drawBackground(unscaledWidth:Number, unscaledHeight:Number):void
			{
				var g:Graphics = graphics;
				g.clear();
				g.beginFill(0x000000);
				g.drawRect(0, 0, width, height);
				g.endFill();
			}
			
		]]>
	</fx:Script>
	
	<!--
	<controls:ProgressBar id="progressBar" indeterminate="true" />
	-->
	
</s:IconItemRenderer>
