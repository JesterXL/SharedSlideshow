<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		  xmlns:s="library://ns.adobe.com/flex/spark" 
		  xmlns:mx="library://ns.adobe.com/flex/mx" 
		  width="100%" height="60" 
		  xmlns:controls="com.jxl.shareslides.controls.*" xmlns:skins="com.jxl.shareslides.skins.*" xmlns:local="*">
	
	<fx:Metadata>
		[Event(name="joinSlideshow", type="com.jxl.shareslides.events.view.SlideshowItemRendererEvent")]
	</fx:Metadata>
	
	<fx:Script>
		<![CDATA[
			import com.jxl.shareslides.events.view.SlideshowItemRendererEvent;
			import com.jxl.shareslides.vo.SlideshowVO;
			import com.projectcocoon.p2p.vo.ObjectMetadataVO;
			
			[Bindable]
			private var progress:Number;
			
			[Bindable]
			public var slideshow:SlideshowVO;
			
			private var _data:Object;
			
			[Bindable]
			public function get data():Object { return _data; }
			public function set data(value:Object):void
			{
				var om:ObjectMetadataVO;
				if(_data && _data is ObjectMetadataVO)
				{
					ObjectMetadataVO(_data).progressSignal.remove(onProgressChanged);
					ObjectMetadataVO(_data).completedSignal.remove(onProgressChanged);
				}

				_data = value;
				
				if(value == null)
				{
					slideshow = null;
					currentState = "waiting";
					return;
				}
				
				if(value is ObjectMetadataVO)
				{
					om = value as ObjectMetadataVO;
					om.progressSignal.add(onProgressChanged);
					om.completedSignal.add(onCompleted);
					if(om.isComplete == false || om.progress < 1)
					{
						slideshow = null;
						currentState = "progress";
						return;
					}
					else
					{
						slideshow = om.object as SlideshowVO;
						if(slideshow)
						{
							if(slideshow.host == false)
							{
								currentState = "host";
							}
							else
							{
								setNormal();
							}
							return;
						}
					}
				}
			}

			private function onProgressChanged():void
			{
				if(currentState != "progress")
					currentState = "progress";

				if(_data && _data is ObjectMetadataVO)
					progress = ObjectMetadataVO(_data).progress;

				progressBar.mode = "manual";
				progressBar.indeterminate = false;
				progressBar.setProgress(progress, 1);
				progressBar.label = "Downloading " + (Math.floor(progress * 100)) + "%";
			}

			private function onCompleted():void
			{
				if(_data && _data is ObjectMetadataVO)
				{
					var om:ObjectMetadataVO = _data as ObjectMetadataVO;
					slideshow = om.object as SlideshowVO;
					if(slideshow)
					{
						if(slideshow.host)
						{
							currentState = "host";
						}
						else
						{
							setNormal();
						}
					}
				}
			}
			
			private function onJoin():void
			{
				var evt:SlideshowItemRendererEvent 	= new SlideshowItemRendererEvent(SlideshowItemRendererEvent.JOIN_SLIDESHOW);
				evt.slideshow 						= slideshow;
				dispatchEvent(evt);
			}

			private function setNormal():void
			{
				currentState = "normal";
			}
			
		]]>
	</fx:Script>
	
	<s:states>
		<s:State name="waiting" />
		<s:State name="normal" />
		<s:State name="progress" />
	</s:states>
	
	<s:HGroup width="100%" height="100%" gap="8"
			  verticalAlign="middle">
		<s:Label text="{data.info}" fontSize="18" color="#FFFFFF" paddingTop="2" />
		<mx:ProgressBar indeterminate="true" id="progressBar" label="Waiting..." includeIn="waiting,progress" />
		<s:Spacer width="100%" />
		<s:Button includeIn="normal" click="onJoin()" toolTip="{currentState}" label="Join"/>
	</s:HGroup>
	
	<skins:FlashSymbolContainer bottom="0">
		<local:ListDividerSymbol width="{width}" />
	</skins:FlashSymbolContainer>
	
</s:Group>
